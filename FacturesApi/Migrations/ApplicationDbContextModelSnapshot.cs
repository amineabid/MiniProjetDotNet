// <auto-generated />
using System;
using FacturesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacturesApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FacturesApi.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("FacturesApi.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("InterventionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterventionId");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("FacturesApi.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReclamationId")
                        .HasColumnType("int");

                    b.Property<bool>("garantie")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReclamationId");

                    b.ToTable("Intervention");
                });

            modelBuilder.Entity("FacturesApi.Models.LigneFacture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("FactureId")
                        .HasColumnType("int");

                    b.Property<int?>("PieceId")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Qte")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("FactureId");

                    b.HasIndex("PieceId");

                    b.ToTable("LigneFacture");
                });

            modelBuilder.Entity("FacturesApi.Models.Piece", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("FacturesApi.Models.Reclamation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reclamation");
                });

            modelBuilder.Entity("FacturesApi.Models.Facture", b =>
                {
                    b.HasOne("FacturesApi.Models.Intervention", "Intervention")
                        .WithMany()
                        .HasForeignKey("InterventionId");

                    b.Navigation("Intervention");
                });

            modelBuilder.Entity("FacturesApi.Models.Intervention", b =>
                {
                    b.HasOne("FacturesApi.Models.Reclamation", "Reclamation")
                        .WithMany()
                        .HasForeignKey("ReclamationId");

                    b.Navigation("Reclamation");
                });

            modelBuilder.Entity("FacturesApi.Models.LigneFacture", b =>
                {
                    b.HasOne("FacturesApi.Models.Facture", "Facture")
                        .WithMany("LigneFactures")
                        .HasForeignKey("FactureId");

                    b.HasOne("FacturesApi.Models.Piece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceId");

                    b.Navigation("Facture");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("FacturesApi.Models.Facture", b =>
                {
                    b.Navigation("LigneFactures");
                });
#pragma warning restore 612, 618
        }
    }
}
